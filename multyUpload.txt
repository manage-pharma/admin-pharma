//======================css============5 tam anh
.img-up .file_img{
    position: relative;
    width: 25%;
    height: 100px;
    cursor: pointer;
}
.img-up .file_img:nth-of-type(1){
    width: 100%;
    height: 400px;
}
.img-up .file_img img{
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
}
.img-up .file_img span{
    position: absolute;
    top: -1px;
    right: -2px;
    z-index: 4;
    background: white;
    color: crimson;
    padding: 3px 7px;
    border-radius: 50%;
    font-size: 10px;
    font-weight: bolder;
    border: 1px solid crimson;
}
//================code=====================

const [images, setImages] = useState([])
 const handleUploadInput = e => {
        dispatch({ type: 'NOTIFY', payload: {} })
        let newImages = []
        let num = 0
        let err = ''
        const files = [...e.target.files]

        if (files.length === 0)
            return dispatch({ type: 'NOTIFY', payload: { error: 'Files does not exist.' } })

        files.forEach(file => {
            if (file.size > 1024 * 1024)
                return err = 'The largest image size is 1mb'

            if (file.type !== 'image/jpeg' && file.type !== 'image/png')
                return err = 'Image format is incorrect.'

            num += 1;
            if (num <= 5) newImages.push(file)
            return newImages;
        })

        if (err) dispatch({ type: 'NOTIFY', payload: { error: err } })

        const imgCount = images.length
        if (imgCount + newImages.length > 5)
            return dispatch({ type: 'NOTIFY', payload: { error: 'Select up to 5 images.' } })
        setImages([...images, ...newImages])
    }

    const deleteImage = index => {
        const newArr = [...images]
        newArr.splice(index, 1)
        setImages(newArr)
    }
//============================



<div className="col-md-6 my-4">
                    <div className="input-group mb-3">
                        <div className="input-group-prepend">
                            <span className="input-group-text">Upload</span>
                        </div>
                        <div className="custom-file border rounded">
                            <input type="file" className="custom-file-input"
                                onChange={handleUploadInput} multiple accept="image/*" />
                        </div>

                    </div>

                    <div className="row img-up mx-0">
                        {
                            images.map((img, index) => (
                                <div key={index} className="file_img my-1">
                                    <img src={img.url ? img.url : URL.createObjectURL(img)}
                                        alt="" className="img-thumbnail rounded" />

                                    <span onClick={() => deleteImage(index)}>X</span>
                                </div>
                            ))
                        }
                    </div>


                </div>





//=================utils js======================


import imageUpload
const imgNewURL = images.filter(img => !img.url)
        const imgOldURL = images.filter(img => img.url)

        if (imgNewURL.length > 0) media = await imageUpload(imgNewURL)



